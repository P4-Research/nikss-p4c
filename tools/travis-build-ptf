#!/bin/bash

# Script for building in a Docker container on Travis.

set -e  # Exit on error.

export P4C_PYTHON3="python3" # Python3 is required for p4c to run, P4C_DEPS would otherwise uninstall it

export P4C_DEPS="bison \
             build-essential \
             cmake \
             curl \
             flex \
             g++ \
             libboost-dev \
             libboost-graph-dev \
             libboost-iostreams1.71-dev \
             libfl-dev \
             libgc-dev \
             libgmp-dev \
             libprotobuf-dev \
             protobuf-compiler \
             pkg-config \
             python3-pip \
             python3-setuptools \
             tcpdump \
             ccache"

export P4C_EBPF_DEPS="libpcap-dev \
             libelf-dev \
             zlib1g-dev \
             llvm \
             clang \
             iptables \
             iproute2 \
             net-tools"

export P4C_RUNTIME_DEPS="cpp \
                     libboost-graph1.71.0 \
                     libboost-iostreams1.71.0 \
                     libgc1c2 \
                     libgmp10 \
                     libgmpxx4ldbl \
                     python3"

export P4C_PIP_PACKAGES="ipaddr \
                          pyroute2 \
                          ply==3.8 \
                          scapy==2.4.4"


export DEBIAN_FRONTEND=noninteractive
apt-get update
apt-get install -y --no-install-recommends \
  ${P4C_DEPS} \
  ${P4C_PYTHON3} \
  ${P4C_EBPF_DEPS} \
  ${P4C_RUNTIME_DEPS} \
  git

# we want to use Python as the default so change the symlinks
ln -sf /usr/bin/python3 /usr/bin/python
ln -sf /usr/bin/pip3 /usr/bin/pip

pip3 install wheel
pip3 install $P4C_PIP_PACKAGES

function install_ptf() {
  export P4C_PTF_PACKAGES="gcc-multilib \
                           python3-six \
                           libjansson-dev \
                           linux-tools-`uname -r`"
  # Package "linux-tools-generic-hwe-20.04" is not required because
  # we test under current kernel, not the newest one

  apt-get install -y --no-install-recommends ${P4C_PTF_PACKAGES}

  # Install Packet Test Framework (aka PTF)
  cd /tmp
  git clone -b master https://github.com/p4lang/ptf.git
  cd /tmp/ptf
  python setup.py install
}

if [[ "${IMAGE_TYPE}" == "test" ]] ; then
  install_ptf
fi

function install_psabpf_ctl() {
  git clone --recursive --branch tatry/digest https://github.com/P4-Research/psabpf.git /tmp/psabpf
  cd /tmp/psabpf
  # some sort of git tag, but later use git tags when psabpf ready to use
  git reset --hard 1073f73
  ./build_libbpf.sh
  mkdir build
  cd build
  cmake ..
  make "-j$(nproc)"
  make install
}

install_psabpf_ctl

# Build libbpf for eBPF tests.
cd /p4c
backends/ebpf/build_libbpf

cd /p4c
rm -rf /tmp/pip

function build() {
  if [ -e build ]; then /bin/rm -rf build; fi
  mkdir -p build
  cd build

  cmake .. '-DCMAKE_CXX_FLAGS:STRING=-O3' "$@"
  make
}

build "-DENABLE_UNIFIED_COMPILATION=${ENABLE_UNIFIED_COMPILATION}"

make install
ccache -p -s

if [[ "${IMAGE_TYPE}" == "build" ]] ; then
  apt-get purge -y ${P4C_DEPS} git
  apt-get autoremove --purge -y
  rm -rf /p4c /var/cache/apt/* /var/lib/apt/lists/*
  echo 'Build image ready'

elif [[ "${IMAGE_TYPE}" == "test" ]] ; then
  echo 'Test image ready'

fi
